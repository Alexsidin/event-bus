import type { Config } from 'jest';

const transpilingOptions: Config = {
  transform: {
    '^.+\\.(ts|mjs|html|svg)$': [
      'ts-jest',
      {
        tsconfig: '<rootDir>/../tsconfig.test.json',
        stringifyContentPathRegex: '\\.(html|svg)$',
      },
    ],
  },
  preset: 'ts-jest',
  testEnvironment: 'jsdom',
  moduleNameMapper: {
    '^@bimeister/utilities/performance$': '<rootDir>/../node_modules/@bimeister/utilities/performance/index.cjs',
    '^@bimeister/utilities/.*$': '<rootDir>/../node_modules/@bimeister/utilities',
  },
};

const baseConfig: Config = {
  ...transpilingOptions,
  coverageThreshold: {
    global: {
      branches: 100,
      functions: 100,
      lines: 100,
      statements: 100,
    },
  },
  bail: false,
  clearMocks: true,
  verbose: true,
  rootDir: '../',
  coverageDirectory: '<rootDir>/coverage',
  moduleDirectories: ['node_modules'],
  testMatch: ['*.spec.ts'],
  projects: [
    {
      ...transpilingOptions,
      displayName: 'internal',
      testMatch: ['<rootDir>/internal/src/**/*.spec.ts'],
    },
    {
      ...transpilingOptions,
      displayName: 'native',
      testMatch: ['<rootDir>/event-bus-native/src/**/*.spec.ts'],
    },
    {
      ...transpilingOptions,
      displayName: 'rxjs',
      testMatch: ['<rootDir>/event-bus-rxjs/src/**/*.spec.ts'],
    },
    {
      ...transpilingOptions,
      displayName: 'rxjs-operators',
      testMatch: ['<rootDir>/rxjs-operators/src/**/*.spec.ts'],
    },
  ],
  collectCoverageFrom: [
    '**/*.ts', // all TypeScript files
    '!**/*.enum.ts', // except non-testable files
    '!**/*.const.ts', // except non-testable files
    '!**/*.interface.ts', // except non-testable files
    '!**/*.type.ts', // except non-testable files
    '!jest.config-base.ts', // except config files
    '!jest.config-pipeline.ts', // except config files
    '!jest.config.ts', // except config files
    '!**/*.spec.ts', // except test files
    '!**/index.ts', // except autogenerated files
    '!**/testing/src/**/*.ts', // except testing tools
    '!**/do-build.ts', // except building tools
    '!**/*.alias.ts', // except reexports
  ],
};

export default baseConfig;
